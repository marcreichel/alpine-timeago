{"version":3,"file":"alpine-timeago.js","sources":["../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/constants/index.js","../node_modules/date-fns/esm/differenceInCalendarMonths/index.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/_lib/roundingMethods/index.js","../node_modules/date-fns/esm/endOfDay/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/_lib/assign/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/formatDistance/index.js","../node_modules/date-fns/esm/formatDistanceToNow/index.js","../node_modules/date-fns/esm/parseISO/index.js","../src/index.js","../builds/cdn.js"],"sourcesContent":["export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInMinute = 60000;\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInHour = 3600000;\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInSecond = 1000;\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minTime = -maxTime;\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minutesInHour = 60;\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInQuarter = 3;\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInYear = 12;\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var quartersInYear = 4;\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInHour = 3600;\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInMinute = 60;","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}","var roundingMap = {\n  ceil: Math.ceil,\n  round: Math.round,\n  floor: Math.floor,\n  trunc: function (value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n  } // Math.trunc is not supported by IE\n\n};\nvar defaultRoundingMethod = 'trunc';\nexport function getRoundingMethod(method) {\n  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import distanceInWords from \"../formatDistance/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import { millisecondsInHour, millisecondsInMinute } from \"../constants/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? 2 : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null; // either year or century is null, not both\n\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import { formatDistanceToNow, parseISO } from 'date-fns';\n\nlet locale = null;\n\nfunction TimeAgo(Alpine) {\n    Alpine.directive('timeago', (el, { expression }, { evaluateLater, effect, cleanup }) => {\n        let evaluateDate = evaluateLater(expression);\n\n        const render = (date) => {\n            try {\n                if (typeof date === 'string') {\n                    date = parseISO(date);\n                }\n                el.textContent = formatDistanceToNow(date, {\n                    addSuffix: true,\n                    locale,\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        }\n\n        let interval;\n\n        effect(() => {\n            evaluateDate((date) => {\n                if (interval) {\n                    clearInterval(interval);\n                }\n\n                render(date);\n\n                interval = setInterval(() => {\n                    render(date);\n                }, 30000);\n            });\n        });\n\n        cleanup(() => clearInterval(interval));\n    });\n}\n\nTimeAgo.configure = (config) => {\n    if (config.hasOwnProperty('locale') && typeof config.locale === 'object') {\n        if (config.locale.hasOwnProperty('formatDistance')) {\n            locale = config.locale;\n        }\n    }\n\n    return TimeAgo;\n}\n\nexport default TimeAgo;\n","import TimeAgo from '../src/index.js';\n\ndocument.addEventListener('alpine:init', () => {\n    TimeAgo(window.Alpine);\n});\n"],"names":["formatDistance","locale","formatLong","formatRelative","localize","match","distanceInWords","TimeAgo","Alpine","directive","el","expression","evaluateLater","effect","cleanup","evaluateDate","render","date","parseISO","textContent","formatDistanceToNow","addSuffix","e","console","error","interval","clearInterval","setInterval","configure","config","hasOwnProperty","document","addEventListener","window"],"mappings":"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"}